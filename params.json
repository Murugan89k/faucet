{
  "name": "Faucet",
  "tagline": "",
  "body": ":version: 1.0\r\n:copyright: 2015 `REANNZ <http://www.reannz.co.nz/>`_.  All Rights Reserved.\r\n\r\n.. meta::\r\n   :keywords: Openflow, Ryu, Faucet, VLAN, SDN\r\n\r\n======\r\nFaucet\r\n======\r\n\r\nFaucet is an Openflow controller for a layer 2 switch based on OpenvApour's Valve. It handles MAC learning and supports VLANs and ACLs.  It is developed as an application for the `Ryu Open Flow Controller <http://osrg.github.io/ryu/>`_\r\n.\r\n\r\nIt supports:\r\n\r\n- OpenFlow v1.3\r\n- Multiple datapaths (via multiple processes)\r\n- Mixed tagged/untagged ports\r\n- Port statistics\r\n- ACL support: Rules are added in the order specified. The rule language supports anything the Ryu OpenFlow protocol parser supports (q.v. ofctl to_match()).\r\n- Control unicast flooding by port and by VLAN\r\n- support for IPv4 and IPv6 static routes on both tagged and untagged VLANs\r\n- Integrated support for InfluxDB/Grafana\r\n\r\n===============\r\nFeature Details\r\n===============\r\n\r\nACL Support\r\n-----------\r\nRules are added in the order specified. The rule language supports anything the Ryu OpenFlow protocol parser supports (q.v. ofctl to_match()).\r\nIn this example,configure an ACL on port 1, default deny, that passes an IPv4 subnet and ARP.\r\nFollowing config applies an input ACL to port 1.\r\n\r\nSupports any ACL rule that https://github.com/osrg/ryu/blob/master/ryu/lib/ofctl_v1_3.py to_match() supports.\r\n::\r\n\r\n  1:\r\n        native_vlan: 2040\r\n        acl_in: 1\r\n\r\n  vlans:\r\n      2040:\r\n          name: \"dev VLAN\"\r\n\r\n  acls:\r\n      1:\r\n          - rule:\r\n              nw_dst: \"172.0.0.0/8\"\r\n              dl_type: 0x800\r\n              allow: 1\r\n\r\n          - rule:\r\n              dl_type: 0x0806\r\n              allow: 1\r\n\r\n          - rule:\r\n              nw_dst: \"10.0.0.0/16\"\r\n              dl_type: 0x800\r\n              allow: 0\r\n\r\n          - rule:\r\n\r\n\r\n\r\nUnicast Flood\r\n-------------\r\nThe default is to flood unknown unicast packets (of course). You might not want unicast flooding on a port for security reasons.\r\n\r\nIf you add unicast_flood: False to a port, then that port will never get unknown destinations flooded to it. So hosts on that port will have to say something to get learned (or someone will need to ND/ARP for it). Broadcasts and Ethernet multicasts are still flooded to that port (so of course ND and ARP work just fine).\r\n\r\nYou can also add unicast_flood: False to a VLAN, which will override all the ports. On my untrusted VLAN, the default gateway has permanent_learn enabled, and unicast flooding disabled.\r\n\r\n\r\n\r\n=============\r\nConfiguration\r\n=============\r\n\r\nFaucet is configured with a YAML-based configuration file. A sample configuration file is supplied in ``faucet.yaml``.\r\n\r\nThe datapath ID may be specified as an integer or hex string (beginning with 0x).\r\n\r\nA port not explicitly defined in the YAML configuration file will be set down and will drop all packets.\r\n\r\n============\r\nInstallation\r\n============\r\nInstallation automatically installs dependent Python packages [ryu, pyaml, influxdb client] recursively. \r\n\r\nYou have run this as ``root`` or use ``sudo``\r\n::\r\n  # pip install https://pypi.python.org/packages/source/r/ryu-faucet/ryu-faucet-0.30.tar.gz\r\n  # pip show ryu-faucet\r\n\r\nOptional Install for Network Monitoring Dashboard\r\n-------------------------------------------------\r\n  - To setup InfluxDB v0.11 - https://docs.influxdata.com/influxdb/v0.10/introduction/getting_started/\r\n  - To setup Grafana v2.6 - http://docs.grafana.org/installation/\r\n\r\nUninstall\r\n---------\r\nTo Uninstall the package\r\n\r\n``# pip uninstall ryu-faucet``\r\n\r\n==========\r\nDeployment\r\n==========\r\n.. image:: src/docs/faucet_deployment.png\r\n\r\nDeployment at Open Networking Foundation\r\n----------------------------------------\r\n.. image:: src/docs/images/ONF_Faucet_deploy1.png\r\n\r\n=================\r\nOpenFlow Pipeline\r\n=================\r\n\r\n::\r\n\r\n    PACKETS IN       +------------------------+  +-------------------------+\r\n      |              |                        |  |                         |\r\n      |              |                        V  |                         V\r\n      |       +------+--+   +---------+   +----------+   +---------+   +---------+\r\n      |       |0:VLAN   |   |1:ACL    |   |2:ETH_SRC |   |3:ETH_DST|   |4:FLOOD  |\r\n      +------>|         +-->|         +-->+          +-->+         |-->+         |\r\n              |         |   |         |   |          |   |         |   |         |\r\n              |         |   |         |   |          |   |         |   |         |\r\n              |         |   |         |   |          |   |         |   |         |\r\n              |         |   |         |   |          |   |         |   |         |\r\n              |         |   |         |   |          |   |         |   |         |\r\n              |         |   |         |   |          |   |         |   |         |\r\n              |         |   |         |   |          |   |         |   |         |\r\n              +---------+   +---------+   +-----+----+   +---+-----+   +----+----+\r\n                                                |            |              |\r\n                                                |            |              |\r\n                                                V            |              V\r\n                                          +----------+       +------->PACKETS OUT\r\n                                          |CONTROL   |\r\n                                          |PLANE     |\r\n                                          |          |\r\n                                          |          |\r\n                                          |          |\r\n                                          |          |\r\n                                          |          |\r\n                                          |          |\r\n                                          |          |\r\n                                          +----------+\r\n\r\n\r\n=======\r\nRunning\r\n=======\r\n\r\nNote: On your system, depending on how Python is installed, you may have to install some additional packages to run faucet.\r\n\r\nRun with ``ryu-manager`` (uses ``/etc/ryu/faucet/faucet.yaml`` as configuration by default):\r\n::\r\n\r\n    # export FAUCET_CONFIG=/etc/ryu/faucet/faucet.yaml\r\n    # export GAUGE_CONFIG=/etc/ryu/faucet/gauge.conf\r\n    # export FAUCET_LOG=/var/log/faucet/faucet.log\r\n    # export FAUCET_EXCEPTION_LOG=/var/log/faucet/faucet_exception.log\r\n    # export GAUGE_LOG=/var/log/faucet/gauge_exception.log\r\n    # export GAUGE_EXCEPTION_LOG=/var/log/faucet/gauge_exception.log\r\n    # $EDITOR /etc/ryu/faucet/faucet.yaml\r\n    # ryu-manager --verbose faucet.py\r\n\r\nTo find the location of ``faucet.py``, run\r\n\r\n``# pip show ryu-faucet`` to get Location path.  Then run:\r\n\r\n``# ryu-manager --verbose <Location_Path>/ryu_faucet/org/onfsdn/faucet/faucet.py``\r\n\r\n  Alternatively, if OF Controller is using a non-default port of 6633, for example 6653, then:\r\n\r\n``# ryu-manager --verbose  --ofp-tcp-listen-port 6653 <Location_Path>/ryu_faucet/org/onfsdn/faucet/faucet.py``\r\n\r\nOn MacOS X, for example, one would run this as:\r\n\r\n``#  ryu-manager --verbose /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ryu_faucet/org/onfsdn/faucet/faucet.py``\r\n\r\nTo specify a different configuration file set the ``FAUCET_CONFIG`` environment variable.\r\n\r\nFaucet will log to ``/var/log/faucet/faucet.log`` and ``/var/log/faucet/faucet_exception.log`` by default, this can be changed with the ``FAUCET_LOG`` and ``FAUCET_EXCEPTION_LOG`` environment variables.\r\n\r\nGauge will log to ``/var/log/faucet/gauge.log`` and ``/var/log/faucet/gauge_exception.log`` by default, this can be changed with the ``GAUGE_LOG`` and ``GAUGE_EXCEPTION_LOG`` environment variables.\r\n\r\nTo tell Faucet to reload its configuration file after you've changed it, simply send it a ``SIGHUP``:\r\n\r\n``# pkill -SIGHUP -f \"ryu-manager faucet.py\"``\r\n\r\n=======\r\nTesting\r\n=======\r\n\r\nBefore issuing a Pull-Request\r\n-----------------------------\r\nRun the tests to make sure everything works!\r\nMininet test actually spins up virtual hosts and a switch, and a test FAUCET controller, and checks connectivity between all the hosts given a test config.  If you send a patch, this mininet test must pass.::\r\n\r\n    # git clone https://github.com/onfsdn/faucet\r\n    # cd faucet/tests\r\n    (As namespace, etc needs to be setup, run the next command as root)\r\n    # sudo ./faucet_mininet_test.py\r\n    # ./test_config.py\r\n\r\nWorking with Real Hardware\r\n--------------------------\r\n\r\nIf you are a hardware vendor wanting to support FAUCET, you need to support all the matches in src/ryu_faucet/org/onfsdn/faucet/valve.py:valve_in_match().\r\n\r\nFaucet has been tested against the following switches:\r\n(Hint: look at src/ryu_faucet/org/onfsdn/faucet/dp.py to add your switch)\r\n\r\n    1. Open vSwitch v2.1+ - Open Source available at http://www.OpenVSwitch.Org\r\n    2. Lagopus Openflow Switch - Open Source available at https://lagopus.github.io/\r\n    3. Allied Telesis x510 and x930 series\r\n    4. NoviFlow 1248\r\n    5. Zodiac FX\r\n\r\nFaucet's design principle is to be as hardware agnostic as possible and not require TTPs. That means that Faucet excepts the hardware OFA to hide implementation details, including which tables are best for certain matches or whether there is special support for multicast - Faucet excepts the OFA to leverage the right hardware transparently.\r\n\r\n============================================================\r\nBuying and running commerical switches supporting ryu-faucet\r\n============================================================\r\n\r\nAllied Telesis\r\n--------------\r\n\r\n `Allied Telesis <http://www.alliedtelesis.com/sdn` sells their products via distributors and resellers. To order in USA call `ProVantage <http://www.provantage.com/allied-telesis-splx10~7ALL912L.htm>`.  To find a sales office near you, visit `Allied Telesis <http://www.AlliedTelesis.com>`\r\n\r\n* On Allied Telesis all vlans must be included in the vlan database config on the switch before they can be used by Openflow.\r\n\r\n\r\nNoviFlow\r\n--------\r\n`NoviFlow <http://noviflow.com/>`\r\n\r\nNorthBound Networks\r\n-------------------\r\n`NorthBound Networks <http://northboundnetworks.com/>`\r\n\r\nFAUCET supports the Zodiac FX as of v0.60 firmware.\r\n\r\n=====\r\nGauge\r\n=====\r\n\r\nGauge is the monitoring application. It polls each port for statistics and periodically dumps the flow table for statistics.\r\n\r\nGauge reads the faucet yaml configuration files of the datapaths it monitors. Which datapaths to monitor is provided in a configuration file containing a list of faucet yaml files, one per line.\r\n\r\nThe list of faucet yaml config is by default read from ``/etc/ryu/faucet/gauge.conf``. This can be set with the ``GAUGE_CONFIG`` environment variable. Exceptions are logged to the same file as faucet's exceptions.\r\n\r\nGauge is run with ``ryu-manager``:\r\n\r\n``$ $EDITOR /etc/ryu/faucet/gauge.conf``\r\n\r\n``$ ryu-manager gauge.py``\r\n\r\nScreenshots\r\n-----------\r\n.. image:: src/docs/images/faucet-snapshot1.png\r\n.. image:: src/docs/images/faucet-snapshot2.png\r\n.. image:: src/docs/images/faucet-snapshot3.png\r\n\r\n=======\r\nSupport\r\n=======\r\n\r\nIf you have any technical questions, problems or suggestions regarding Faucet please send them to `faucet-dev@OpenflowSDN.Org <mailto:faucet-dev@openflowsdn.org>`.  Mailing list archives are available `here <https://groups.google.com/a/openflowsdn.org/forum/#!forum/faucet-dev>`.\r\n\r\nTo create a issue, use `Github issues <https://github.com/onfsdn/faucet/issues>`\r\n",
  "google": "UA-78449055-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}